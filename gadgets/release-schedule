<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs
            title="リリース7"
            description="会社内でのリリース日共有のためのアプリです。">
        <Require feature="views"/>
        <Require feature="dynamic-height"/>
        <Require feature="minimessage"/>
        <Require feature="tabs"/>
        <Require feature="aipostyle"/>
        <Require feature="osapi"/>
        <Require feature="setprefs"/>
    </ModulePrefs>
    <UserPref name="p1-homeRows" display_name="表示件数（通常時）" datatype="enum" default_value="5">
        <EnumValue value="5"/>
        <EnumValue value="10"/>
        <EnumValue value="50"/>
    </UserPref>
    <UserPref name="p2-canvasRows" display_name="表示件数（最大化時）" datatype="enum" default_value="10">
        <EnumValue value="5"/>
        <EnumValue value="10"/>
        <EnumValue value="50"/>
    </UserPref>


    <Content type="html"><![CDATA[
        <div class="aipostyle">
            <form name="date">
                <table class="form wide">
                    <tbody>
                    <tr>
                        <th>リリース日</th>
                        <td>
                            <select id="yearid" name="yearname" onchange="daySet()">年</select>
                            <select id="monthid" name="monthname" onchange="daySet()">月</select>
                            <select id="dayid" name="dayname">日</select>
                        </td>
                        <th>タイトル</th>
                        <td><input type="text"
                                   id="commentid"/></td>
                        <th>担当者</th>
                        <td><input type="text"
                                   id="staffid"/></td>
                    </tr>
                    </tbody>
                </table>
                <div class="center">
                    <input type="button" value="投稿する" onclick="dataSubmit()"/>
                    <input type="button" value="データ一覧表示" onclick="datacheck()"/>
                </div>
            </form>

            <form name="schedules">
                <h3>リリーススケジュール</h3>
                <table class="list wide">
                    <thead>
                    <tr>
                        <th>リリース日
                        </th>
                        <th>内容</th>
                        <th>担当者</th>
                        <th class="thin">削除
                        </th>
                    </tr>
                    </thead>
                    <tbody id="status">
                    <tr>
                        <td>2011/08/10</td>
                        <td>Aipoアプリリリース
                        </td>
                        <td>山田太郎、木村一郎</td>
                        <td class="thin"><a href="">×</a></td>
                    </tr>
                    </tbody>
                </table>
            <div id="pager" style="text-align:center;" class="pager"></div>
            </form>
        </div>

        <script type="text/javascript" src="https://d2hv4ldeur9lfv.cloudfront.net/opensocial-jquery-1.3.2.5.min.js">
        </script>
        <script type="text/javascript">

            //変数設定
                //日時に関する変数
                var dateToday = new Date();
                var yearToday = dateToday.getYear();
                var yearCEToday = (yearToday<2000) ? yearToday+1900 : yearToday ;
                var monthToday = dateToday.getMonth() + 1;
                var dayToday = dateToday.getDate();
                var yearMonthDayToday = yearCEToday*10000 + monthToday*100 + dayToday;
                var msg = new gadgets.MiniMessage();

            //セレクトボックスを今年の1/1に初期化
            function initSelectbox(){
                //あとでセレクトボックスに挿入するHTML
                var yearHtml = new Array();
                var monthHtml = new Array();
                //yearHtmlに現在から10年後までを代入
                for (var i=yearCEToday ; i<=yearCEToday+10 ; i++){
                    yearHtml.push('<option value="' + i + '">' + i + '</option>');
                }

                //monthHtmlに1から12を代入
                for (var i=1 ; i<=12 ; i++){
                    monthHtml.push('<option value="' + i + '">' + i + '</option>');
                }

                document.getElementById("yearid").innerHTML = yearHtml;
                document.getElementById("monthid").innerHTML = monthHtml;
                daySet();
            }

            //年月から日数を計算してセレクトボックスへ挿入
            function daySet(){
                //あとでセレクトボックスに挿入するHTML
                var dayHtml = new Array();
                //月ごとの日数を計算して入れておく変数
                var daysOfMonth;
                //現在セレクトボックスで選択されている年月
                var yearSelectedNow = document.date.yearname.selectedIndex + yearCEToday;
                var monthSelectedNow = document.date.monthname.selectedIndex + 1;

                //月毎の日数を計算
                if (monthSelectedNow == 4 || monthSelectedNow == 6 || monthSelectedNow == 9 || monthSelectedNow == 11){
                    daysOfMonth = 30;
                }else if(monthSelectedNow != 2){
                    daysOfMonth = 31;
                }else{
                    daysOfMonth = daysOfFeb(yearSelectedNow);
                }

                //dayHtmlに、選択された年と月に合わせた日数を代入
                for (var i=1 ; i <= daysOfMonth ; i++){
                    dayHtml.push('<option value="' + i + '">' + i + '</option>');
                }

                document.getElementById("dayid").innerHTML = dayHtml;

            }

            //2月の日数を求める関数
            function daysOfFeb(year){
                if (year%4 == 0){
                    if (year%100 ==0){
                        return(29);
                    }else{
                    return(28);
                    }
                }else{
                return(29);
                }
            }

            //入力されたデータを保存する関数
            function dataSubmit(){
                //フォームからの値の取得
                var yearSubmitted = $("#yearid").val() ;
                var monthSubmitted = $("#monthid").val();
                var daySubmitted = $("#dayid").val();
                var commentSubmitted = $("#commentid").val();
                var staffSubmitted = $("#staffid").val();

                //ソート用に文字列状態の数字をint型に変換
                var intYearSubmitted =parseInt(yearSubmitted);
                var intMonthSubmitted =parseInt(monthSubmitted);
                var intDaySubmitted =parseInt(daySubmitted);
                var intYearMonthDaySubmitted = intYearSubmitted*10000 + intMonthSubmitted*100 + intDaySubmitted;

                //データ保存用の年月日
                var savedYearMonthDay = yearSubmitted + "年" + monthSubmitted + "月" + daySubmitted + "日";

                //今回入力されたデータを入れておく配列
                var allScheduleDataSaved = {};

                //バリデート
                if (!commentSubmitted || commentSubmitted.length > 100 || !staffSubmitted || staffSubmitted.length > 100){
                    if (!commentSubmitted) {
                        msg.createTimerMessage("コメントを入力してください。", 5);
                        gadgets.window.adjustHeight();
                    }
                    if (commentSubmitted.length > 100) {
                        msg.createTimerMessage("コメントは100文字までで入力してください。", 5);
                        gadgets.window.adjustHeight();
                    }
                    if (!staffSubmitted) {
                        msg.createTimerMessage("担当者を入力してください。", 5);
                        gadgets.window.adjustHeight();
                    }
                    if (staffSubmitted.length > 100) {
                        msg.createTimerMessage("担当者は100文字までで入力してください。", 5);
                        gadgets.window.adjustHeight();
                    }
                    return false;
                }

                //appdataの要素である配列 '__MODULE_ID__' を取得し、配列 'allScheduleDataSaved'に入れる
                osapi.appdata.get({ userId: '@admin' ,fields: '__MODULE_ID__' }).execute(function(response) {
                // ユーザーID、アプリデータの連想配列
                    for (var userId in response) {
                       var data = response[userId];
                       // キー, 値の連想配列
                       for (var key in data) {
                          // 値
                          // 例）値1
                          var allScheduleDataSaved2 = data[key];
                          allScheduleDataSaved = gadgets.json.parse(allScheduleDataSaved2);
                          alert(gadgets.json.stringify(allScheduleDataSaved));
                       }
                    }
                });



                //appdata内の配列 '__MODULE_ID__'での各変数の番号設定。（例）2011年8月23日の2番目のコメントは11 08 23 2 1
                //登録されたdateのスケジュールの重複度を記録する配列内の場所
                var duplicationPlace =  (intYearMonthDaySubmitted - 20000000)*100; //11 08 23 0 0 まで入る。末尾が0に注意。
                var duplication = allScheduleDataSaved[""+duplicationPlace]; //データを登録する直前の重複度が入る。0～9。
                    if (!duplication) {duplication = 0;}
                var commentSavedNumber = duplicationPlace + (duplication + 1)*10 + 1 ; //11 08 23 2 1。末尾の1はコメントを表す
                var staffSavedNumber = duplicationPlace + (duplication + 1)*10 + 2 ; //11 08 23 2 2。末尾の2はスタッフを表す
                var dateSavedNumber = duplicationPlace + (duplication + 1)*10 + 3 ; //11 08 23 2 3。末尾の3は日付を表す

                alert(duplicationPlace);
                alert(duplication);
                alert(commentSavedNumber);
                alert(staffSavedNumber);
                alert(dateSavedNumber);

                //配列allScheduleDataSavedに、今回入力された要素を注入
                allScheduleDataSaved[commentSavedNumber] = gadgets.util.escapeString(commentSubmitted);
                allScheduleDataSaved[staffSavedNumber] = gadgets.util.escapeString(staffSubmitted);
                allScheduleDataSaved[dateSavedNumber] = gadgets.util.escapeString(savedYearMonthDay);
                //重複度を1増やしておく
                allScheduleDataSaved[duplicationPlace] = duplication + 1;

                alert(allScheduleDataSaved[commentSavedNumber]);
                alert(allScheduleDataSaved[staffSavedNumber]);
                alert(allScheduleDataSaved[dateSavedNumber]);
                alert(allScheduleDataSaved[duplicationPlace]);

                //今回入力されたデータの保存
                var dataSaved = {}; //今回入力されたデータを一時的に入れておく配列。この配列は'__MODULE_ID__'成分にallScheduleDataSavedを文字化して入れるだけ
                dataSaved['__MODULE_ID__'] = gadgets.json.stringify ( allScheduleDataSaved );
                alert(dataSaved['__MODULE_ID__']);
                alert(gadgets.json.stringify(dataSaved));

                osapi.appdata.update({ userId: '@admin', data: dataSaved }).execute(function(res) {
                    //保存失敗時の処理
                    if (res.error) {
                        alert("保存に失敗しました");
                    }else{
                        //保存後の処理
                        $("#commentid").val("");
                        $("#staffid").val("");
                        msg.createTimerMessage("送信しました。", 3, function() {
                            gadgets.window.adjustHeight();
                            return true;
                        });
                        //テーブル再描画
                        repaint();
                    }
                });
            }


            //テーブルの再描画関数
            function repaint(){
//                //dataSubmit()におけるallScheduleDataSavedと同じ中身の配列。全スケジュールデータが入る。
//                var allScheduleDataGot = {};
//
//                //永続化データの取得
//                osapi.appdata.get({ userId: '@admin' }).execute(function(res) {
//                      for (var id in  res) {
//                          var allAppDataGot = res[id];
//                          allScheduleDataGot = gadgets.json.parse( allAppDataGot['__MODULE_ID__'] );
//                      }
//                });
//
//                alert(allScheduleDataGot);
//
            }

            function datacheck(){ //Aipo公式のまね
                osapi.appdata.get({ userId: '@admin' ,fields: '__MODULE_ID__' }).execute(function(response) {
                // ユーザーID、アプリデータの連想配列
                    for (var userId in response) {
                       var data = response[userId];
                       // キー, 値の連想配列
                       for (var key in data) {
                          // 値
                          // 例）値1
                          var value = data[key];
                          alert(value);
                       }
                    }
                });
            }


            //初期化
            function init() {
                initSelectbox();
                gadgets.window.adjustHeight();
            }

        gadgets.util.registerOnLoadHandler(init);
        </script>
    ]]></Content>


</Module>